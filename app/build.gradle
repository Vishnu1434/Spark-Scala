plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.11'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    // Spark dependencies
    implementation 'org.apache.spark:spark-core_2.13:3.2.4'
    implementation 'org.apache.spark:spark-sql_2.13:3.2.4'
    implementation 'org.apache.spark:spark-graphx_2.13:3.2.4'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.13:3.2.16'
    testImplementation 'org.scalatestplus:junit-4-13_2.13:3.2.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

application {
    // Define the main class for the application.
    mainClass.set('demo.App')
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
tasks.withType(ShadowJar) {
    zip64 true
    archiveBaseName.set("app")
    archiveClassifier.set("")  // no "-all" suffix
    archiveVersion.set("")
}